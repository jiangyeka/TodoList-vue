{"ast":null,"code":"import _objectSpread from \"/Users/jinpeng/Desktop/vue_learning/TodoList-vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"TodoList\",\n  data: function data() {\n    return {\n      msg: \"\",\n      list: [],\n      allComplete: false,\n      showState: 1\n    };\n  },\n  methods: {\n    add: function add() {\n      if (!this.msg) return;\n      var tmp = {\n        msg: this.msg,\n        completed: false,\n        id: Date.now()\n      };\n      this.list.push(tmp);\n      this.msg = \"\";\n    },\n    remove: function remove(key) {\n      this.list = this.list.filter(function (item) {\n        return item.id != key;\n      });\n    },\n    removeCompleted: function removeCompleted() {\n      this.list = this.list.filter(function (item) {\n        return item.completed == false;\n      });\n\n      if (this.list.length == 0) {\n        this.allComplete = false;\n      }\n    },\n    setState: function setState(val) {\n      this.showState = val;\n    }\n  },\n  watch: {\n    allComplete: function allComplete(val) {\n      this.list = this.list.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          completed: val\n        });\n      });\n    }\n  },\n  computed: {\n    leftNumber: function leftNumber() {\n      return this.list.filter(function (item) {\n        return item.completed == false;\n      }).length;\n    },\n    list1: function list1() {\n      return this.list.filter(function (item) {\n        return item.completed == false;\n      });\n    },\n    list2: function list2() {\n      return this.list.filter(function (item) {\n        return item.completed == true;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,aADA;AAEAC,cAFA;AAGAC,wBAHA;AAIAC;AAJA;AAMA,GATA;AAUAC;AACAC,OADA,iBACA;AACA;AACA;AACAL,qBADA;AAEAM,wBAFA;AAGAC;AAHA;AAKA;AACA;AACA,KAVA;AAWAC,UAXA,kBAWAC,GAXA,EAWA;AACA;AAAA;AAAA;AACA,KAbA;AAcAC,mBAdA,6BAcA;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA,KAnBA;AAoBAC,YApBA,oBAoBAC,GApBA,EAoBA;AACA;AACA;AAtBA,GAVA;AAkCAC;AACAX,eADA,uBACAU,GADA,EACA;AACA;AACA,+CACAE,IADA;AAEAR;AAFA;AAIA,OALA;AAMA;AARA,GAlCA;AA4CAS;AACAC,cADA,wBACA;AACA;AAAA;AAAA;AACA,KAHA;AAIAC,SAJA,mBAIA;AACA;AAAA;AAAA;AACA,KANA;AAOAC,SAPA,mBAOA;AACA;AAAA;AAAA;AACA;AATA;AA5CA","names":["name","data","msg","list","allComplete","showState","methods","add","completed","id","remove","key","removeCompleted","setState","val","watch","item","computed","leftNumber","list1","list2"],"sourceRoot":"src/components","sources":["TodoList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>TodoList</h1>\n    <input type=\"checkbox\" v-model=\"allComplete\" />\n    <input v-model=\"msg\" @keypress.enter=\"add\" />\n    <article v-for=\"(item) in showState==1?list:showState==2?list1:list2\" :key=\"item.id\">\n      <input type=\"checkbox\" v-model=\"item.completed\" />\n      <span>{{ item.msg }}</span>\n      <button @click=\"remove(item.id)\">X</button>\n    </article>\n    <footer>\n      <span>{{ leftNumber }}items left</span>\n      <button :disabled=\"showState==1\" @click=\"setState(1)\">all</button>\n      <button :disabled=\"showState==2\" @click=\"setState(2)\">active</button>\n      <button :disabled=\"showState==3\" @click=\"setState(3)\">completed</button>\n      <button v-if=\"leftNumber != list.length\" @click=\"removeCompleted\">\n        clear completed\n      </button>\n    </footer>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"TodoList\",\n  data() {\n    return {\n      msg: \"\",\n      list: [],\n      allComplete: false,\n      showState:1\n    };\n  },\n  methods: {\n    add() {\n      if (!this.msg) return;\n      let tmp = {\n        msg: this.msg,\n        completed: false,\n        id:Date.now()\n      };\n      this.list.push(tmp);\n      this.msg = \"\";\n    },\n    remove(key) {\n      this.list = this.list.filter((item) => item.id != key);\n    },\n    removeCompleted() {\n      this.list = this.list.filter((item) => item.completed == false);\n      if(this.list.length==0){\n        this.allComplete=false\n      }\n    },\n    setState(val){\n      this.showState=val\n    }\n  },\n  watch: {\n    allComplete(val) {\n      this.list = this.list.map((item) => {\n        return {\n          ...item,\n          completed: val,\n        };\n      });\n    },\n  },\n  computed: {\n    leftNumber() {\n      return this.list.filter((item) => item.completed == false).length;\n    },\n    list1() {\n      return this.list.filter((item) => item.completed == false);\n    },\n    list2() {\n      return this.list.filter((item) => item.completed == true);\n    }\n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}